/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  mutation AddAnnouncement($announcementInput: AnnouncementInput!) {\n    AddAnnouncement(announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n": typeof types.AddAnnouncementDocument,
    "\n  mutation DeleteAnnouncement($deleteAnnouncementId: String!) {\n    DeleteAnnouncement(id: $deleteAnnouncementId) {\n      id\n      title\n      date\n      content\n    }\n  }\n": typeof types.DeleteAnnouncementDocument,
    "\n  mutation EditAnnouncement($editAnnouncementId: String!, $announcementInput: AnnouncementInput!) {\n    EditAnnouncement(id: $editAnnouncementId, announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n": typeof types.EditAnnouncementDocument,
    "\n  mutation AddArticle($articleInput: ArticleInput!) {\n    AddArticle(articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n": typeof types.AddArticleDocument,
    "\n  mutation UpdateArticle($updateArticleId: String!, $articleInput: ArticleInput!) {\n    UpdateArticle(id: $updateArticleId, articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n": typeof types.UpdateArticleDocument,
    "\n  mutation DeleteArticle($deleteArticleId: String!) {\n    DeleteArticle(id: $deleteArticleId) {\n      id\n    }\n  }\n": typeof types.DeleteArticleDocument,
    "\n  mutation AddDisposableMaterial($disposableMaterialInput: DisposableMaterialInput!) {\n    AddDisposableMaterial(disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.AddDisposableMaterialDocument,
    "\n  mutation DeleteDisposableMaterial($deleteDisposableMaterialId: String!) {\n    DeleteDisposableMaterial(id: $deleteDisposableMaterialId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.DeleteDisposableMaterialDocument,
    "\n  mutation EditDisposableMaterial($editDisposableMaterialId: String!, $disposableMaterialInput: DisposableMaterialInput!) {\n    EditDisposableMaterial(id: $editDisposableMaterialId, disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.EditDisposableMaterialDocument,
    "\n  mutation AddMachine($machineInput: MachineInput!) {\n    AddMachine(machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.AddMachineDocument,
    "\n  mutation DeleteMachine($deleteMachineId: String!) {\n    DeleteMachine(id: $deleteMachineId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.DeleteMachineDocument,
    "\n  mutation EditMachine($editMachineId: String!, $machineInput: MachineInput!) {\n    EditMachine(id: $editMachineId, machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.EditMachineDocument,
    "\n  mutation AddMaterial($materialInput: MaterialInput!) {\n    AddMaterial(materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.AddMaterialDocument,
    "\n  mutation DeleteMaterial($deleteMaterialId: String!) {\n    DeleteMaterial(id: $deleteMaterialId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.DeleteMaterialDocument,
    "\n  mutation EditMaterial($editMaterialId: String!, $materialInput: MaterialInput!) {\n    EditMaterial(id: $editMaterialId, materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.EditMaterialDocument,
    "\n  mutation AddThreeDP($threeDpInput: ThreeDPInput!) {\n    AddThreeDP(threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      broken\n    }\n}": typeof types.AddThreeDpDocument,
    "\n  mutation DeleteThreeDP($deleteThreeDpId: String!) {\n    DeleteThreeDP(id: $deleteThreeDpId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": typeof types.DeleteThreeDpDocument,
    "\n  mutation EditThreeDP($editThreeDpId: String!, $threeDpInput: ThreeDPInput!) {\n    EditThreeDP(id: $editThreeDpId, threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": typeof types.EditThreeDpDocument,
    "\n  mutation AddThreeDPRequest($threeDpRequestInput: ThreeDPRequestInput!) {\n    AddThreeDPRequest(threeDPRequestInput: $threeDpRequestInput) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": typeof types.AddThreeDpRequestDocument,
    "\n  mutation DeleteThreeDPRequest($deleteThreeDpRequestId: String!) {\n    DeleteThreeDPRequest(id: $deleteThreeDpRequestId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n": typeof types.DeleteThreeDpRequestDocument,
    "\n  mutation EditThreeDPRequestStatus($editThreeDpRequestStatusId: String!, $status: String!) {\n    EditThreeDPRequestStatus(id: $editThreeDpRequestStatusId, status: $status) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n": typeof types.EditThreeDpRequestStatusDocument,
    "\n  mutation AddTool($toolInput: ToolInput!) {\n    AddTool(toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.AddToolDocument,
    "\n  mutation DeleteTool($deleteToolId: String!) {\n    DeleteTool(id: $deleteToolId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.DeleteToolDocument,
    "\n  mutation EditTool($editToolId: String!, $toolInput: ToolInput!) {\n    EditTool(id: $editToolId, toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.EditToolDocument,
    "\n  mutation AddUser($userInput: UserInput!) {\n    AddUser(userInput: $userInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.AddUserDocument,
    "\n  mutation DeleteUser($deleteUserId: String!) {\n    DeleteUser(id: $deleteUserId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.DeleteUserDocument,
    "\n  mutation EditUser($editUserId: String!, $userEditInput: UserEditInput!) {\n    EditUser(id: $editUserId, userEditInput: $userEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.EditUserDocument,
    "\n  mutation DisposableMaterialUsageUpdate($disposableMaterialUsageUpdateId: String!, $disposableMaterialUsageUpdateInput: DisposableMaterialUsageUpdateInput!) {\n    DisposableMaterialUsageUpdate(id: $disposableMaterialUsageUpdateId, disposableMaterialUsageUpdateInput: $disposableMaterialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.DisposableMaterialUsageUpdateDocument,
    "\n  mutation MaterialUsageUpdate($materialUsageUpdateId: String!, $materialUsageUpdateInput: MaterialUsageUpdateInput!) {\n    MaterialUsageUpdate(id: $materialUsageUpdateId, materialUsageUpdateInput: $materialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.MaterialUsageUpdateDocument,
    "\n  mutation ToolUsageUpdate($toolUsageUpdateId: String!, $toolUsageUpdateInput: ToolUsageUpdateInput!) {\n    ToolUsageUpdate(id: $toolUsageUpdateId, toolUsageUpdateInput: $toolUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.ToolUsageUpdateDocument,
    "\n  mutation UserMachineUsageUpdate($userMachineUsageUpdateId: String!, $userMachineUpdateInput: UserMachineUpdateInput!) {\n    UserMachineUsageUpdate(id: $userMachineUsageUpdateId, userMachineUpdateInput: $userMachineUpdateInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      language\n    }\n  }\n": typeof types.UserMachineUsageUpdateDocument,
    "\n  mutation UpdateAuthorizedCode($authorizedCodeInput: AuthorizedCodeInput!) {\n    UpdateAuthorizedCode(authorizedCodeInput: $authorizedCodeInput) {\n      id\n      codeList\n      updatedAt\n    }\n  }\n": typeof types.UpdateAuthorizedCodeDocument,
    "\n  mutation AddToolLike($toolLikeInput: ToolLikeInput!) {\n    AddToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n": typeof types.AddToolLikeDocument,
    "\n  mutation DeleteToolLike($toolLikeInput: ToolLikeInput!) {\n    DeleteToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n": typeof types.DeleteToolLikeDocument,
    "\n  mutation EditUserLanguage($editUserLanguageId: String!, $language: String!) {\n    EditUserLanguage(id: $editUserLanguageId, language: $language) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n    }\n  }\n": typeof types.EditUserLanguageDocument,
    "\n  mutation AddUserBorrowTool($userBorrowToolInput: UserBorrowToolInput!) {\n    AddUserBorrowTool(userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.AddUserBorrowToolDocument,
    "\n  mutation DeleteUserBorrowTool($deleteUserBorrowToolId: String!) {\n    DeleteUserBorrowTool(id: $deleteUserBorrowToolId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.DeleteUserBorrowToolDocument,
    "\n  mutation EditUserBorrowToolQuantity($editUserBorrowToolQuantityId: String!, $userBorrowToolInput: UserBorrowToolInput!) {\n    EditUserBorrowToolQuantity(id: $editUserBorrowToolQuantityId, userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.EditUserBorrowToolQuantityDocument,
    "\n  mutation EditUserBorrowToolStatus($editUserBorrowToolStatusId: String!, $status: String!) {\n    EditUserBorrowToolStatus(id: $editUserBorrowToolStatusId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.EditUserBorrowToolStatusDocument,
    "\n  mutation AddMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    AddMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n": typeof types.AddMaterialLikeDocument,
    "\n  mutation DeleteMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    DeleteMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n": typeof types.DeleteMaterialLikeDocument,
    "\n  mutation AddUserBorrowMaterial($userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    AddUserBorrowMaterial(userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.AddUserBorrowMaterialDocument,
    "\n  mutation DeleteUserBorrowMaterial($deleteUserBorrowMaterialId: String!) {\n    DeleteUserBorrowMaterial(id: $deleteUserBorrowMaterialId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.DeleteUserBorrowMaterialDocument,
    "\n  mutation EditUserBorrowMaterialQuantity($editUserBorrowMaterialQuantityId: String!, $userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    EditUserBorrowMaterialQuantity(id: $editUserBorrowMaterialQuantityId, userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.EditUserBorrowMaterialQuantityDocument,
    "\n  mutation EditUserBorrowMaterialStatus($editUserBorrowMaterialStatusId: String!, $status: String!) {\n    EditUserBorrowMaterialStatus(id: $editUserBorrowMaterialStatusId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.EditUserBorrowMaterialStatusDocument,
    "\n  mutation SignUp($signUpInput: SignUpInput!) {\n    SignUp(signUpInput: $signUpInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n": typeof types.SignUpDocument,
    "\n  mutation AddSignupAuthCode($signupAuthCodeInput: SignupAuthCodeInput!) {\n    AddSignupAuthCode(signupAuthCodeInput: $signupAuthCodeInput) {\n      studentID\n      code\n    }\n  }\n": typeof types.AddSignupAuthCodeDocument,
    "\n  mutation EditUserPassword($editUserPasswordId: String!, $userPasswordEditInput: UserPasswordEditInput!) {\n    EditUserPassword(id: $editUserPasswordId, userPasswordEditInput: $userPasswordEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.EditUserPasswordDocument,
    "\n  mutation PromoteUser($promoteUserId: String!, $promoteUserInput: PromoteUserInput!) {\n    PromoteUser(id: $promoteUserId, promoteUserInput: $promoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.PromoteUserDocument,
    "\n  mutation DemoteUser($demoteUserId: String!, $demoteUserInput: DemoteUserInput!) {\n    DemoteUser(id: $demoteUserId, demoteUserInput: $demoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.DemoteUserDocument,
    "\n  mutation AddAdminSchedule($adminScheduleInput: AdminScheduleInput!) {\n    AddAdminSchedule(adminScheduleInput: $adminScheduleInput) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": typeof types.AddAdminScheduleDocument,
    "\n  mutation DeleteAdminSchedule($deleteAdminScheduleId: String!) {\n    DeleteAdminSchedule(id: $deleteAdminScheduleId) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": typeof types.DeleteAdminScheduleDocument,
    "\n  mutation EditAdminSchedule($editAdminScheduleId: String!, $name: String!) {\n    EditAdminSchedule(id: $editAdminScheduleId, name: $name) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": typeof types.EditAdminScheduleDocument,
    "\n  query GetAllAnnouncements($cursor: String, $limit: Int) {\n    GetAllAnnouncements(cursor: $cursor, limit: $limit) {\n      announcements {\n        id\n        title\n        date\n        content\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllAnnouncementsDocument,
    "\n  query GetAnnouncementById($id: String!) {\n    GetAnnouncementById(id: $id) {\n      id\n      title\n      date\n      content\n    }\n  }\n": typeof types.GetAnnouncementByIdDocument,
    "\n  query SearchAnnouncementByTitle($title: String!) {\n    SearchAnnouncementByTitle(title: $title) {\n      id\n      title\n      date\n      content\n    }\n  }\n": typeof types.SearchAnnouncementByTitleDocument,
    "\n  query GetAllTools($cursor: String, $limit: Int) {\n    GetAllTools(cursor: $cursor, limit: $limit) {\n      tools {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        remain\n        toolLikeIds\n        userBorrowToolIds\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllToolsDocument,
    "\n  query GetToolById($getToolByIdId: String!) {\n    GetToolById(id: $getToolByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.GetToolByIdDocument,
    "\n  query SearchToolByCategory($category: String!) {\n  SearchToolByCategory(category: $category) {\n    id\n    name\n    partName\n    category\n    position\n    description\n    photoLink\n    usage\n    tutorialLink\n    remain\n    toolLikeIds\n    userBorrowToolIds\n  }\n}\n": typeof types.SearchToolByCategoryDocument,
    "\n  query SearchToolByPosition($position: String!) {\n    SearchToolByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.SearchToolByPositionDocument,
    "\n  query SearchToolByName($name: String!) {\n    SearchToolByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.SearchToolByNameDocument,
    "\n  query GetAllArticles($cursor: String, $limit: Int) {\n    GetAllArticles(cursor: $cursor, limit: $limit) {\n      articles {\n        id\n        writerId\n        description\n        imageURL\n        time\n        title\n        headline\n        content\n        userpic\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllArticlesDocument,
    "\n  query GetArticleById($getArticleByIdId: String!) {\n  GetArticleById(id: $getArticleByIdId) {\n    id\n    writerId\n    description\n    imageURL\n    time\n    title\n    headline\n    content\n    userpic\n  }\n}\n": typeof types.GetArticleByIdDocument,
    "\n  query GetAllDisposableMaterials($cursor: String, $limit: Int) {\n    GetAllDisposableMaterials(cursor: $cursor, limit: $limit) {\n      disposableMaterials {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllDisposableMaterialsDocument,
    "\n  query SearchDisposableMaterialByCategory($category: String!) {\n    SearchDisposableMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.SearchDisposableMaterialByCategoryDocument,
    "\n  query SearchDisposableMaterialByPosition($position: String!) {\n    SearchDisposableMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.SearchDisposableMaterialByPositionDocument,
    "\n  query SearchDisposableMaterialByName($name: String!) {\n    SearchDisposableMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": typeof types.SearchDisposableMaterialByNameDocument,
    "\n  query GetAllMachines($cursor: String, $limit: Int) {\n    GetAllMachines(cursor: $cursor, limit: $limit) {\n      machines {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllMachinesDocument,
    "\n  query GetMachineById($getMachineByIdId: String!) {\n    GetMachineById(id: $getMachineByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.GetMachineByIdDocument,
    "\n  query SearchMachineByCategory($category: String!) {\n    SearchMachineByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.SearchMachineByCategoryDocument,
    "\n  query SearchMachineByPosition($position: String!) {\n    SearchMachineByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.SearchMachineByPositionDocument,
    "\n  query SearchMachineByName($input: String!) {\n    SearchMachineByName(input: $input) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": typeof types.SearchMachineByNameDocument,
    "\n  query GetAllMaterials($cursor: String, $limit: Int) {\n    GetAllMaterials(cursor: $cursor, limit: $limit) {\n      materials {\n        id\n        name\n        partName\n        category\n        valuable\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllMaterialsDocument,
    "\n  query GetMaterialById($id: String!) {\n    GetMaterialById(id: $id) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.GetMaterialByIdDocument,
    "\n  query SearchMaterialByCategory($category: String!) {\n    SearchMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.SearchMaterialByCategoryDocument,
    "\n  query SearchMaterialByPosition($position: String!) {\n    SearchMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.SearchMaterialByPositionDocument,
    "\n  query SearchMaterialByName($name: String!) {\n    SearchMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.SearchMaterialByNameDocument,
    "\n  query GetAllThreeDPs($cursor: String, $limit: Int) {\n    GetAllThreeDPs(cursor: $cursor, limit: $limit) {\n      threeDPs {\n        id\n        name\n        position\n        description\n        photoLink\n        tutorialLink\n        threeDPRequestIds\n        broken\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllThreeDPsDocument,
    "\n  query GetThreeDPById($getThreeDpByIdId: String!) {\n    GetThreeDPById(id: $getThreeDpByIdId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": typeof types.GetThreeDpByIdDocument,
    "\n  query SearchThreeDPByPosition($position: String!) {\n    SearchThreeDPByPosition(position: $position) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": typeof types.SearchThreeDpByPositionDocument,
    "\n  query GetAllThreeDPRequests {\n    GetAllThreeDPRequests {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": typeof types.GetAllThreeDpRequestsDocument,
    "\n  query GetThreeDPRequestsByThreeDPId($threeDpId: String!) {\n    GetThreeDPRequestsByThreeDPId(threeDPId: $threeDpId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": typeof types.GetThreeDpRequestsByThreeDpIdDocument,
    "\n  query GetThreeDPRequestsByUserId($userId: String!) {\n    GetThreeDPRequestsByUserId(userId: $userId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": typeof types.GetThreeDpRequestsByUserIdDocument,
    "\n  query GetAllUsers($cursor: String, $limit: Int) {\n    GetAllUsers(cursor: $cursor, limit: $limit) {\n      users {\n        id\n        name\n        studentID\n        photoLink\n        laserCutAvailable\n        isAdmin\n        isMinister\n      }\n      cursor\n    }\n  }\n": typeof types.GetAllUsersDocument,
    "\n  query SearchUserByName($name: String!) {\n    SearchUserByName(name: $name) {\n      id\n      name\n      studentID\n      photoLink\n      laserCutAvailable\n      isAdmin\n      isMinister\n    }\n  }\n": typeof types.SearchUserByNameDocument,
    "\n  query GetUserByStudentID($studentId: String!) {\n    GetUserByStudentID(studentID: $studentId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": typeof types.GetUserByStudentIdDocument,
    "\n  query GetAuthorizedCode {\n    GetAuthorizedCode {\n      id\n      codeList\n      updatedAt\n    }\n  }\n": typeof types.GetAuthorizedCodeDocument,
    "\n  query GetToolLikes {\n    GetToolLikes {\n      id\n      userId\n      toolId\n    }\n  }\n": typeof types.GetToolLikesDocument,
    "\n  query GetToolLikeById($getToolLikeByIdId: String!) {\n    GetToolLikeById(id: $getToolLikeByIdId) {\n      id\n      userId\n      toolId\n    }\n  }\n": typeof types.GetToolLikeByIdDocument,
    "\n  query GetLikedToolsByUserId($userId: String!) {\n    GetLikedToolsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": typeof types.GetLikedToolsByUserIdDocument,
    "\n  query GetAllUserBorrowTools {\n    GetAllUserBorrowTools {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetAllUserBorrowToolsDocument,
    "\n  query GetAllUserBorrowToolsByStatus($status: [String]!) {\n    GetAllUserBorrowToolsByStatus(status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetAllUserBorrowToolsByStatusDocument,
    "\n  query GetUserBorrowToolById($getUserBorrowToolByIdId: String!) {\n    GetUserBorrowToolById(id: $getUserBorrowToolByIdId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetUserBorrowToolByIdDocument,
    "\n  query GetUserBorrowToolsByUserId($userId: String!) {\n    GetUserBorrowToolsByUserId(userId: $userId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetUserBorrowToolsByUserIdDocument,
    "\n  query GetUserBorrowToolsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowToolsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetUserBorrowToolsByStatusAndUserIdDocument,
    "\n  query GetMaterialLikes {\n    GetMaterialLikes {\n      id\n      userId\n      materialId\n    }\n  }\n": typeof types.GetMaterialLikesDocument,
    "\n  query GetMaterialLikeById($getMaterialLikeByIdId: String!) {\n    GetMaterialLikeById(id: $getMaterialLikeByIdId) {\n      id\n      userId\n      materialId\n    }\n  }\n": typeof types.GetMaterialLikeByIdDocument,
    "\n  query GetLikedMaterialsByUserId($userId: String!) {\n    GetLikedMaterialsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n    }\n  }\n": typeof types.GetLikedMaterialsByUserIdDocument,
    "\n  query GetAllUserBorrowMaterials {\n    GetAllUserBorrowMaterials {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetAllUserBorrowMaterialsDocument,
    "\n  query GetAllUserBorrowMaterialsByStatus($status: [String]!) {\n    GetAllUserBorrowMaterialsByStatus(status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetAllUserBorrowMaterialsByStatusDocument,
    "\n  query GetUserBorrowMaterialById($getUserBorrowMaterialByIdId: String!) {\n    GetUserBorrowMaterialById(id: $getUserBorrowMaterialByIdId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetUserBorrowMaterialByIdDocument,
    "\n  query GetUserBorrowMaterialsByUserId($userId: String!) {\n    GetUserBorrowMaterialsByUserId(userId: $userId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetUserBorrowMaterialsByUserIdDocument,
    "\n  query GetUserBorrowMaterialsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowMaterialsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": typeof types.GetUserBorrowMaterialsByStatusAndUserIdDocument,
    "\n  query LogIn($logInInput: LogInInput!) {\n    LogIn(logInInput: $logInInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n": typeof types.LogInDocument,
    "\n  query GetAdminScheduleByDay($day: String!) {\n    GetAdminScheduleByDay(day: $day) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": typeof types.GetAdminScheduleByDayDocument,
    "\n  query GetAdminScheduleByPeriod($period: String!) {\n    GetAdminScheduleByPeriod(period: $period) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": typeof types.GetAdminScheduleByPeriodDocument,
    "\n  query GetAllAdminSchedules {\n    GetAllAdminSchedules {\n      id\n      admin\n      day\n      period\n    }\n  }\n": typeof types.GetAllAdminSchedulesDocument,
    "\n  query GetAllSignupAuthCodes {\n    GetAllSignupAuthCodes {\n      studentID\n      code\n    }\n  }\n": typeof types.GetAllSignupAuthCodesDocument,
    "\n  query GetSignupAuthCodeByStudentID($studentId: String!) {\n    GetSignupAuthCodeByStudentID(studentID: $studentId) {\n      studentID\n      code\n    }\n  }\n": typeof types.GetSignupAuthCodeByStudentIdDocument,
    "\n  query Query($studentId: String!, $code: String!) {\n    CheckSignupAuthCode(studentID: $studentId, code: $code)\n  }\n": typeof types.QueryDocument,
    "\n  subscription AnnouncementCreated {\n    AnnouncementCreated {\n      id\n      date\n      title\n      content\n    }\n  }\n": typeof types.AnnouncementCreatedDocument,
    "\n  subscription ArticleCreated {\n    ArticleCreated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n": typeof types.ArticleCreatedDocument,
    "\n  subscription ArticleUpdated {\n    ArticleUpdated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n": typeof types.ArticleUpdatedDocument,
    "\n  subscription ArticleDeleted {\n    ArticleDeleted {\n      id\n    }\n  }\n": typeof types.ArticleDeletedDocument,
};
const documents: Documents = {
    "\n  mutation AddAnnouncement($announcementInput: AnnouncementInput!) {\n    AddAnnouncement(announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n": types.AddAnnouncementDocument,
    "\n  mutation DeleteAnnouncement($deleteAnnouncementId: String!) {\n    DeleteAnnouncement(id: $deleteAnnouncementId) {\n      id\n      title\n      date\n      content\n    }\n  }\n": types.DeleteAnnouncementDocument,
    "\n  mutation EditAnnouncement($editAnnouncementId: String!, $announcementInput: AnnouncementInput!) {\n    EditAnnouncement(id: $editAnnouncementId, announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n": types.EditAnnouncementDocument,
    "\n  mutation AddArticle($articleInput: ArticleInput!) {\n    AddArticle(articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n": types.AddArticleDocument,
    "\n  mutation UpdateArticle($updateArticleId: String!, $articleInput: ArticleInput!) {\n    UpdateArticle(id: $updateArticleId, articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n": types.UpdateArticleDocument,
    "\n  mutation DeleteArticle($deleteArticleId: String!) {\n    DeleteArticle(id: $deleteArticleId) {\n      id\n    }\n  }\n": types.DeleteArticleDocument,
    "\n  mutation AddDisposableMaterial($disposableMaterialInput: DisposableMaterialInput!) {\n    AddDisposableMaterial(disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.AddDisposableMaterialDocument,
    "\n  mutation DeleteDisposableMaterial($deleteDisposableMaterialId: String!) {\n    DeleteDisposableMaterial(id: $deleteDisposableMaterialId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.DeleteDisposableMaterialDocument,
    "\n  mutation EditDisposableMaterial($editDisposableMaterialId: String!, $disposableMaterialInput: DisposableMaterialInput!) {\n    EditDisposableMaterial(id: $editDisposableMaterialId, disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.EditDisposableMaterialDocument,
    "\n  mutation AddMachine($machineInput: MachineInput!) {\n    AddMachine(machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.AddMachineDocument,
    "\n  mutation DeleteMachine($deleteMachineId: String!) {\n    DeleteMachine(id: $deleteMachineId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.DeleteMachineDocument,
    "\n  mutation EditMachine($editMachineId: String!, $machineInput: MachineInput!) {\n    EditMachine(id: $editMachineId, machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.EditMachineDocument,
    "\n  mutation AddMaterial($materialInput: MaterialInput!) {\n    AddMaterial(materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.AddMaterialDocument,
    "\n  mutation DeleteMaterial($deleteMaterialId: String!) {\n    DeleteMaterial(id: $deleteMaterialId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.DeleteMaterialDocument,
    "\n  mutation EditMaterial($editMaterialId: String!, $materialInput: MaterialInput!) {\n    EditMaterial(id: $editMaterialId, materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.EditMaterialDocument,
    "\n  mutation AddThreeDP($threeDpInput: ThreeDPInput!) {\n    AddThreeDP(threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      broken\n    }\n}": types.AddThreeDpDocument,
    "\n  mutation DeleteThreeDP($deleteThreeDpId: String!) {\n    DeleteThreeDP(id: $deleteThreeDpId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": types.DeleteThreeDpDocument,
    "\n  mutation EditThreeDP($editThreeDpId: String!, $threeDpInput: ThreeDPInput!) {\n    EditThreeDP(id: $editThreeDpId, threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": types.EditThreeDpDocument,
    "\n  mutation AddThreeDPRequest($threeDpRequestInput: ThreeDPRequestInput!) {\n    AddThreeDPRequest(threeDPRequestInput: $threeDpRequestInput) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": types.AddThreeDpRequestDocument,
    "\n  mutation DeleteThreeDPRequest($deleteThreeDpRequestId: String!) {\n    DeleteThreeDPRequest(id: $deleteThreeDpRequestId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n": types.DeleteThreeDpRequestDocument,
    "\n  mutation EditThreeDPRequestStatus($editThreeDpRequestStatusId: String!, $status: String!) {\n    EditThreeDPRequestStatus(id: $editThreeDpRequestStatusId, status: $status) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n": types.EditThreeDpRequestStatusDocument,
    "\n  mutation AddTool($toolInput: ToolInput!) {\n    AddTool(toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.AddToolDocument,
    "\n  mutation DeleteTool($deleteToolId: String!) {\n    DeleteTool(id: $deleteToolId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.DeleteToolDocument,
    "\n  mutation EditTool($editToolId: String!, $toolInput: ToolInput!) {\n    EditTool(id: $editToolId, toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.EditToolDocument,
    "\n  mutation AddUser($userInput: UserInput!) {\n    AddUser(userInput: $userInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.AddUserDocument,
    "\n  mutation DeleteUser($deleteUserId: String!) {\n    DeleteUser(id: $deleteUserId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.DeleteUserDocument,
    "\n  mutation EditUser($editUserId: String!, $userEditInput: UserEditInput!) {\n    EditUser(id: $editUserId, userEditInput: $userEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.EditUserDocument,
    "\n  mutation DisposableMaterialUsageUpdate($disposableMaterialUsageUpdateId: String!, $disposableMaterialUsageUpdateInput: DisposableMaterialUsageUpdateInput!) {\n    DisposableMaterialUsageUpdate(id: $disposableMaterialUsageUpdateId, disposableMaterialUsageUpdateInput: $disposableMaterialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.DisposableMaterialUsageUpdateDocument,
    "\n  mutation MaterialUsageUpdate($materialUsageUpdateId: String!, $materialUsageUpdateInput: MaterialUsageUpdateInput!) {\n    MaterialUsageUpdate(id: $materialUsageUpdateId, materialUsageUpdateInput: $materialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.MaterialUsageUpdateDocument,
    "\n  mutation ToolUsageUpdate($toolUsageUpdateId: String!, $toolUsageUpdateInput: ToolUsageUpdateInput!) {\n    ToolUsageUpdate(id: $toolUsageUpdateId, toolUsageUpdateInput: $toolUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.ToolUsageUpdateDocument,
    "\n  mutation UserMachineUsageUpdate($userMachineUsageUpdateId: String!, $userMachineUpdateInput: UserMachineUpdateInput!) {\n    UserMachineUsageUpdate(id: $userMachineUsageUpdateId, userMachineUpdateInput: $userMachineUpdateInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      language\n    }\n  }\n": types.UserMachineUsageUpdateDocument,
    "\n  mutation UpdateAuthorizedCode($authorizedCodeInput: AuthorizedCodeInput!) {\n    UpdateAuthorizedCode(authorizedCodeInput: $authorizedCodeInput) {\n      id\n      codeList\n      updatedAt\n    }\n  }\n": types.UpdateAuthorizedCodeDocument,
    "\n  mutation AddToolLike($toolLikeInput: ToolLikeInput!) {\n    AddToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n": types.AddToolLikeDocument,
    "\n  mutation DeleteToolLike($toolLikeInput: ToolLikeInput!) {\n    DeleteToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n": types.DeleteToolLikeDocument,
    "\n  mutation EditUserLanguage($editUserLanguageId: String!, $language: String!) {\n    EditUserLanguage(id: $editUserLanguageId, language: $language) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n    }\n  }\n": types.EditUserLanguageDocument,
    "\n  mutation AddUserBorrowTool($userBorrowToolInput: UserBorrowToolInput!) {\n    AddUserBorrowTool(userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.AddUserBorrowToolDocument,
    "\n  mutation DeleteUserBorrowTool($deleteUserBorrowToolId: String!) {\n    DeleteUserBorrowTool(id: $deleteUserBorrowToolId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.DeleteUserBorrowToolDocument,
    "\n  mutation EditUserBorrowToolQuantity($editUserBorrowToolQuantityId: String!, $userBorrowToolInput: UserBorrowToolInput!) {\n    EditUserBorrowToolQuantity(id: $editUserBorrowToolQuantityId, userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.EditUserBorrowToolQuantityDocument,
    "\n  mutation EditUserBorrowToolStatus($editUserBorrowToolStatusId: String!, $status: String!) {\n    EditUserBorrowToolStatus(id: $editUserBorrowToolStatusId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.EditUserBorrowToolStatusDocument,
    "\n  mutation AddMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    AddMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n": types.AddMaterialLikeDocument,
    "\n  mutation DeleteMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    DeleteMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n": types.DeleteMaterialLikeDocument,
    "\n  mutation AddUserBorrowMaterial($userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    AddUserBorrowMaterial(userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.AddUserBorrowMaterialDocument,
    "\n  mutation DeleteUserBorrowMaterial($deleteUserBorrowMaterialId: String!) {\n    DeleteUserBorrowMaterial(id: $deleteUserBorrowMaterialId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.DeleteUserBorrowMaterialDocument,
    "\n  mutation EditUserBorrowMaterialQuantity($editUserBorrowMaterialQuantityId: String!, $userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    EditUserBorrowMaterialQuantity(id: $editUserBorrowMaterialQuantityId, userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.EditUserBorrowMaterialQuantityDocument,
    "\n  mutation EditUserBorrowMaterialStatus($editUserBorrowMaterialStatusId: String!, $status: String!) {\n    EditUserBorrowMaterialStatus(id: $editUserBorrowMaterialStatusId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.EditUserBorrowMaterialStatusDocument,
    "\n  mutation SignUp($signUpInput: SignUpInput!) {\n    SignUp(signUpInput: $signUpInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n": types.SignUpDocument,
    "\n  mutation AddSignupAuthCode($signupAuthCodeInput: SignupAuthCodeInput!) {\n    AddSignupAuthCode(signupAuthCodeInput: $signupAuthCodeInput) {\n      studentID\n      code\n    }\n  }\n": types.AddSignupAuthCodeDocument,
    "\n  mutation EditUserPassword($editUserPasswordId: String!, $userPasswordEditInput: UserPasswordEditInput!) {\n    EditUserPassword(id: $editUserPasswordId, userPasswordEditInput: $userPasswordEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.EditUserPasswordDocument,
    "\n  mutation PromoteUser($promoteUserId: String!, $promoteUserInput: PromoteUserInput!) {\n    PromoteUser(id: $promoteUserId, promoteUserInput: $promoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.PromoteUserDocument,
    "\n  mutation DemoteUser($demoteUserId: String!, $demoteUserInput: DemoteUserInput!) {\n    DemoteUser(id: $demoteUserId, demoteUserInput: $demoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.DemoteUserDocument,
    "\n  mutation AddAdminSchedule($adminScheduleInput: AdminScheduleInput!) {\n    AddAdminSchedule(adminScheduleInput: $adminScheduleInput) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": types.AddAdminScheduleDocument,
    "\n  mutation DeleteAdminSchedule($deleteAdminScheduleId: String!) {\n    DeleteAdminSchedule(id: $deleteAdminScheduleId) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": types.DeleteAdminScheduleDocument,
    "\n  mutation EditAdminSchedule($editAdminScheduleId: String!, $name: String!) {\n    EditAdminSchedule(id: $editAdminScheduleId, name: $name) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": types.EditAdminScheduleDocument,
    "\n  query GetAllAnnouncements($cursor: String, $limit: Int) {\n    GetAllAnnouncements(cursor: $cursor, limit: $limit) {\n      announcements {\n        id\n        title\n        date\n        content\n      }\n      cursor\n    }\n  }\n": types.GetAllAnnouncementsDocument,
    "\n  query GetAnnouncementById($id: String!) {\n    GetAnnouncementById(id: $id) {\n      id\n      title\n      date\n      content\n    }\n  }\n": types.GetAnnouncementByIdDocument,
    "\n  query SearchAnnouncementByTitle($title: String!) {\n    SearchAnnouncementByTitle(title: $title) {\n      id\n      title\n      date\n      content\n    }\n  }\n": types.SearchAnnouncementByTitleDocument,
    "\n  query GetAllTools($cursor: String, $limit: Int) {\n    GetAllTools(cursor: $cursor, limit: $limit) {\n      tools {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        remain\n        toolLikeIds\n        userBorrowToolIds\n      }\n      cursor\n    }\n  }\n": types.GetAllToolsDocument,
    "\n  query GetToolById($getToolByIdId: String!) {\n    GetToolById(id: $getToolByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.GetToolByIdDocument,
    "\n  query SearchToolByCategory($category: String!) {\n  SearchToolByCategory(category: $category) {\n    id\n    name\n    partName\n    category\n    position\n    description\n    photoLink\n    usage\n    tutorialLink\n    remain\n    toolLikeIds\n    userBorrowToolIds\n  }\n}\n": types.SearchToolByCategoryDocument,
    "\n  query SearchToolByPosition($position: String!) {\n    SearchToolByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.SearchToolByPositionDocument,
    "\n  query SearchToolByName($name: String!) {\n    SearchToolByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.SearchToolByNameDocument,
    "\n  query GetAllArticles($cursor: String, $limit: Int) {\n    GetAllArticles(cursor: $cursor, limit: $limit) {\n      articles {\n        id\n        writerId\n        description\n        imageURL\n        time\n        title\n        headline\n        content\n        userpic\n      }\n      cursor\n    }\n  }\n": types.GetAllArticlesDocument,
    "\n  query GetArticleById($getArticleByIdId: String!) {\n  GetArticleById(id: $getArticleByIdId) {\n    id\n    writerId\n    description\n    imageURL\n    time\n    title\n    headline\n    content\n    userpic\n  }\n}\n": types.GetArticleByIdDocument,
    "\n  query GetAllDisposableMaterials($cursor: String, $limit: Int) {\n    GetAllDisposableMaterials(cursor: $cursor, limit: $limit) {\n      disposableMaterials {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n      }\n      cursor\n    }\n  }\n": types.GetAllDisposableMaterialsDocument,
    "\n  query SearchDisposableMaterialByCategory($category: String!) {\n    SearchDisposableMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.SearchDisposableMaterialByCategoryDocument,
    "\n  query SearchDisposableMaterialByPosition($position: String!) {\n    SearchDisposableMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.SearchDisposableMaterialByPositionDocument,
    "\n  query SearchDisposableMaterialByName($name: String!) {\n    SearchDisposableMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n": types.SearchDisposableMaterialByNameDocument,
    "\n  query GetAllMachines($cursor: String, $limit: Int) {\n    GetAllMachines(cursor: $cursor, limit: $limit) {\n      machines {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n      }\n      cursor\n    }\n  }\n": types.GetAllMachinesDocument,
    "\n  query GetMachineById($getMachineByIdId: String!) {\n    GetMachineById(id: $getMachineByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.GetMachineByIdDocument,
    "\n  query SearchMachineByCategory($category: String!) {\n    SearchMachineByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.SearchMachineByCategoryDocument,
    "\n  query SearchMachineByPosition($position: String!) {\n    SearchMachineByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.SearchMachineByPositionDocument,
    "\n  query SearchMachineByName($input: String!) {\n    SearchMachineByName(input: $input) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n": types.SearchMachineByNameDocument,
    "\n  query GetAllMaterials($cursor: String, $limit: Int) {\n    GetAllMaterials(cursor: $cursor, limit: $limit) {\n      materials {\n        id\n        name\n        partName\n        category\n        valuable\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      cursor\n    }\n  }\n": types.GetAllMaterialsDocument,
    "\n  query GetMaterialById($id: String!) {\n    GetMaterialById(id: $id) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.GetMaterialByIdDocument,
    "\n  query SearchMaterialByCategory($category: String!) {\n    SearchMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.SearchMaterialByCategoryDocument,
    "\n  query SearchMaterialByPosition($position: String!) {\n    SearchMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.SearchMaterialByPositionDocument,
    "\n  query SearchMaterialByName($name: String!) {\n    SearchMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.SearchMaterialByNameDocument,
    "\n  query GetAllThreeDPs($cursor: String, $limit: Int) {\n    GetAllThreeDPs(cursor: $cursor, limit: $limit) {\n      threeDPs {\n        id\n        name\n        position\n        description\n        photoLink\n        tutorialLink\n        threeDPRequestIds\n        broken\n      }\n      cursor\n    }\n  }\n": types.GetAllThreeDPsDocument,
    "\n  query GetThreeDPById($getThreeDpByIdId: String!) {\n    GetThreeDPById(id: $getThreeDpByIdId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": types.GetThreeDpByIdDocument,
    "\n  query SearchThreeDPByPosition($position: String!) {\n    SearchThreeDPByPosition(position: $position) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n": types.SearchThreeDpByPositionDocument,
    "\n  query GetAllThreeDPRequests {\n    GetAllThreeDPRequests {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": types.GetAllThreeDpRequestsDocument,
    "\n  query GetThreeDPRequestsByThreeDPId($threeDpId: String!) {\n    GetThreeDPRequestsByThreeDPId(threeDPId: $threeDpId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": types.GetThreeDpRequestsByThreeDpIdDocument,
    "\n  query GetThreeDPRequestsByUserId($userId: String!) {\n    GetThreeDPRequestsByUserId(userId: $userId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n": types.GetThreeDpRequestsByUserIdDocument,
    "\n  query GetAllUsers($cursor: String, $limit: Int) {\n    GetAllUsers(cursor: $cursor, limit: $limit) {\n      users {\n        id\n        name\n        studentID\n        photoLink\n        laserCutAvailable\n        isAdmin\n        isMinister\n      }\n      cursor\n    }\n  }\n": types.GetAllUsersDocument,
    "\n  query SearchUserByName($name: String!) {\n    SearchUserByName(name: $name) {\n      id\n      name\n      studentID\n      photoLink\n      laserCutAvailable\n      isAdmin\n      isMinister\n    }\n  }\n": types.SearchUserByNameDocument,
    "\n  query GetUserByStudentID($studentId: String!) {\n    GetUserByStudentID(studentID: $studentId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n": types.GetUserByStudentIdDocument,
    "\n  query GetAuthorizedCode {\n    GetAuthorizedCode {\n      id\n      codeList\n      updatedAt\n    }\n  }\n": types.GetAuthorizedCodeDocument,
    "\n  query GetToolLikes {\n    GetToolLikes {\n      id\n      userId\n      toolId\n    }\n  }\n": types.GetToolLikesDocument,
    "\n  query GetToolLikeById($getToolLikeByIdId: String!) {\n    GetToolLikeById(id: $getToolLikeByIdId) {\n      id\n      userId\n      toolId\n    }\n  }\n": types.GetToolLikeByIdDocument,
    "\n  query GetLikedToolsByUserId($userId: String!) {\n    GetLikedToolsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n": types.GetLikedToolsByUserIdDocument,
    "\n  query GetAllUserBorrowTools {\n    GetAllUserBorrowTools {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetAllUserBorrowToolsDocument,
    "\n  query GetAllUserBorrowToolsByStatus($status: [String]!) {\n    GetAllUserBorrowToolsByStatus(status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetAllUserBorrowToolsByStatusDocument,
    "\n  query GetUserBorrowToolById($getUserBorrowToolByIdId: String!) {\n    GetUserBorrowToolById(id: $getUserBorrowToolByIdId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetUserBorrowToolByIdDocument,
    "\n  query GetUserBorrowToolsByUserId($userId: String!) {\n    GetUserBorrowToolsByUserId(userId: $userId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetUserBorrowToolsByUserIdDocument,
    "\n  query GetUserBorrowToolsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowToolsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetUserBorrowToolsByStatusAndUserIdDocument,
    "\n  query GetMaterialLikes {\n    GetMaterialLikes {\n      id\n      userId\n      materialId\n    }\n  }\n": types.GetMaterialLikesDocument,
    "\n  query GetMaterialLikeById($getMaterialLikeByIdId: String!) {\n    GetMaterialLikeById(id: $getMaterialLikeByIdId) {\n      id\n      userId\n      materialId\n    }\n  }\n": types.GetMaterialLikeByIdDocument,
    "\n  query GetLikedMaterialsByUserId($userId: String!) {\n    GetLikedMaterialsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n    }\n  }\n": types.GetLikedMaterialsByUserIdDocument,
    "\n  query GetAllUserBorrowMaterials {\n    GetAllUserBorrowMaterials {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetAllUserBorrowMaterialsDocument,
    "\n  query GetAllUserBorrowMaterialsByStatus($status: [String]!) {\n    GetAllUserBorrowMaterialsByStatus(status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetAllUserBorrowMaterialsByStatusDocument,
    "\n  query GetUserBorrowMaterialById($getUserBorrowMaterialByIdId: String!) {\n    GetUserBorrowMaterialById(id: $getUserBorrowMaterialByIdId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetUserBorrowMaterialByIdDocument,
    "\n  query GetUserBorrowMaterialsByUserId($userId: String!) {\n    GetUserBorrowMaterialsByUserId(userId: $userId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetUserBorrowMaterialsByUserIdDocument,
    "\n  query GetUserBorrowMaterialsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowMaterialsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n": types.GetUserBorrowMaterialsByStatusAndUserIdDocument,
    "\n  query LogIn($logInInput: LogInInput!) {\n    LogIn(logInInput: $logInInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n": types.LogInDocument,
    "\n  query GetAdminScheduleByDay($day: String!) {\n    GetAdminScheduleByDay(day: $day) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": types.GetAdminScheduleByDayDocument,
    "\n  query GetAdminScheduleByPeriod($period: String!) {\n    GetAdminScheduleByPeriod(period: $period) {\n      id\n      admin\n      day\n      period\n    }\n  }\n": types.GetAdminScheduleByPeriodDocument,
    "\n  query GetAllAdminSchedules {\n    GetAllAdminSchedules {\n      id\n      admin\n      day\n      period\n    }\n  }\n": types.GetAllAdminSchedulesDocument,
    "\n  query GetAllSignupAuthCodes {\n    GetAllSignupAuthCodes {\n      studentID\n      code\n    }\n  }\n": types.GetAllSignupAuthCodesDocument,
    "\n  query GetSignupAuthCodeByStudentID($studentId: String!) {\n    GetSignupAuthCodeByStudentID(studentID: $studentId) {\n      studentID\n      code\n    }\n  }\n": types.GetSignupAuthCodeByStudentIdDocument,
    "\n  query Query($studentId: String!, $code: String!) {\n    CheckSignupAuthCode(studentID: $studentId, code: $code)\n  }\n": types.QueryDocument,
    "\n  subscription AnnouncementCreated {\n    AnnouncementCreated {\n      id\n      date\n      title\n      content\n    }\n  }\n": types.AnnouncementCreatedDocument,
    "\n  subscription ArticleCreated {\n    ArticleCreated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n": types.ArticleCreatedDocument,
    "\n  subscription ArticleUpdated {\n    ArticleUpdated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n": types.ArticleUpdatedDocument,
    "\n  subscription ArticleDeleted {\n    ArticleDeleted {\n      id\n    }\n  }\n": types.ArticleDeletedDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddAnnouncement($announcementInput: AnnouncementInput!) {\n    AddAnnouncement(announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n"): (typeof documents)["\n  mutation AddAnnouncement($announcementInput: AnnouncementInput!) {\n    AddAnnouncement(announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteAnnouncement($deleteAnnouncementId: String!) {\n    DeleteAnnouncement(id: $deleteAnnouncementId) {\n      id\n      title\n      date\n      content\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteAnnouncement($deleteAnnouncementId: String!) {\n    DeleteAnnouncement(id: $deleteAnnouncementId) {\n      id\n      title\n      date\n      content\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditAnnouncement($editAnnouncementId: String!, $announcementInput: AnnouncementInput!) {\n    EditAnnouncement(id: $editAnnouncementId, announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n"): (typeof documents)["\n  mutation EditAnnouncement($editAnnouncementId: String!, $announcementInput: AnnouncementInput!) {\n    EditAnnouncement(id: $editAnnouncementId, announcementInput: $announcementInput) {\n      id\n      title\n      date\n      content\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddArticle($articleInput: ArticleInput!) {\n    AddArticle(articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n"): (typeof documents)["\n  mutation AddArticle($articleInput: ArticleInput!) {\n    AddArticle(articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateArticle($updateArticleId: String!, $articleInput: ArticleInput!) {\n    UpdateArticle(id: $updateArticleId, articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateArticle($updateArticleId: String!, $articleInput: ArticleInput!) {\n    UpdateArticle(id: $updateArticleId, articleInput: $articleInput) {\n      id\n      writerId\n      description\n      imageURL\n      time\n      title\n      headline\n      content\n      userpic\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteArticle($deleteArticleId: String!) {\n    DeleteArticle(id: $deleteArticleId) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteArticle($deleteArticleId: String!) {\n    DeleteArticle(id: $deleteArticleId) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddDisposableMaterial($disposableMaterialInput: DisposableMaterialInput!) {\n    AddDisposableMaterial(disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  mutation AddDisposableMaterial($disposableMaterialInput: DisposableMaterialInput!) {\n    AddDisposableMaterial(disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteDisposableMaterial($deleteDisposableMaterialId: String!) {\n    DeleteDisposableMaterial(id: $deleteDisposableMaterialId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteDisposableMaterial($deleteDisposableMaterialId: String!) {\n    DeleteDisposableMaterial(id: $deleteDisposableMaterialId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditDisposableMaterial($editDisposableMaterialId: String!, $disposableMaterialInput: DisposableMaterialInput!) {\n    EditDisposableMaterial(id: $editDisposableMaterialId, disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  mutation EditDisposableMaterial($editDisposableMaterialId: String!, $disposableMaterialInput: DisposableMaterialInput!) {\n    EditDisposableMaterial(id: $editDisposableMaterialId, disposableMaterialInput: $disposableMaterialInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddMachine($machineInput: MachineInput!) {\n    AddMachine(machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  mutation AddMachine($machineInput: MachineInput!) {\n    AddMachine(machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteMachine($deleteMachineId: String!) {\n    DeleteMachine(id: $deleteMachineId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteMachine($deleteMachineId: String!) {\n    DeleteMachine(id: $deleteMachineId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditMachine($editMachineId: String!, $machineInput: MachineInput!) {\n    EditMachine(id: $editMachineId, machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  mutation EditMachine($editMachineId: String!, $machineInput: MachineInput!) {\n    EditMachine(id: $editMachineId, machineInput: $machineInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddMaterial($materialInput: MaterialInput!) {\n    AddMaterial(materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation AddMaterial($materialInput: MaterialInput!) {\n    AddMaterial(materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteMaterial($deleteMaterialId: String!) {\n    DeleteMaterial(id: $deleteMaterialId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteMaterial($deleteMaterialId: String!) {\n    DeleteMaterial(id: $deleteMaterialId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditMaterial($editMaterialId: String!, $materialInput: MaterialInput!) {\n    EditMaterial(id: $editMaterialId, materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation EditMaterial($editMaterialId: String!, $materialInput: MaterialInput!) {\n    EditMaterial(id: $editMaterialId, materialInput: $materialInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddThreeDP($threeDpInput: ThreeDPInput!) {\n    AddThreeDP(threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      broken\n    }\n}"): (typeof documents)["\n  mutation AddThreeDP($threeDpInput: ThreeDPInput!) {\n    AddThreeDP(threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      broken\n    }\n}"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteThreeDP($deleteThreeDpId: String!) {\n    DeleteThreeDP(id: $deleteThreeDpId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteThreeDP($deleteThreeDpId: String!) {\n    DeleteThreeDP(id: $deleteThreeDpId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditThreeDP($editThreeDpId: String!, $threeDpInput: ThreeDPInput!) {\n    EditThreeDP(id: $editThreeDpId, threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"): (typeof documents)["\n  mutation EditThreeDP($editThreeDpId: String!, $threeDpInput: ThreeDPInput!) {\n    EditThreeDP(id: $editThreeDpId, threeDPInput: $threeDpInput) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddThreeDPRequest($threeDpRequestInput: ThreeDPRequestInput!) {\n    AddThreeDPRequest(threeDPRequestInput: $threeDpRequestInput) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"): (typeof documents)["\n  mutation AddThreeDPRequest($threeDpRequestInput: ThreeDPRequestInput!) {\n    AddThreeDPRequest(threeDPRequestInput: $threeDpRequestInput) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteThreeDPRequest($deleteThreeDpRequestId: String!) {\n    DeleteThreeDPRequest(id: $deleteThreeDpRequestId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n"): (typeof documents)["\n  mutation DeleteThreeDPRequest($deleteThreeDpRequestId: String!) {\n    DeleteThreeDPRequest(id: $deleteThreeDpRequestId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditThreeDPRequestStatus($editThreeDpRequestStatusId: String!, $status: String!) {\n    EditThreeDPRequestStatus(id: $editThreeDpRequestStatusId, status: $status) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n"): (typeof documents)["\n  mutation EditThreeDPRequestStatus($editThreeDpRequestStatusId: String!, $status: String!) {\n    EditThreeDPRequestStatus(id: $editThreeDpRequestStatusId, status: $status) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  } \n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddTool($toolInput: ToolInput!) {\n    AddTool(toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  mutation AddTool($toolInput: ToolInput!) {\n    AddTool(toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteTool($deleteToolId: String!) {\n    DeleteTool(id: $deleteToolId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteTool($deleteToolId: String!) {\n    DeleteTool(id: $deleteToolId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditTool($editToolId: String!, $toolInput: ToolInput!) {\n    EditTool(id: $editToolId, toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  mutation EditTool($editToolId: String!, $toolInput: ToolInput!) {\n    EditTool(id: $editToolId, toolInput: $toolInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddUser($userInput: UserInput!) {\n    AddUser(userInput: $userInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation AddUser($userInput: UserInput!) {\n    AddUser(userInput: $userInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteUser($deleteUserId: String!) {\n    DeleteUser(id: $deleteUserId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteUser($deleteUserId: String!) {\n    DeleteUser(id: $deleteUserId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUser($editUserId: String!, $userEditInput: UserEditInput!) {\n    EditUser(id: $editUserId, userEditInput: $userEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation EditUser($editUserId: String!, $userEditInput: UserEditInput!) {\n    EditUser(id: $editUserId, userEditInput: $userEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DisposableMaterialUsageUpdate($disposableMaterialUsageUpdateId: String!, $disposableMaterialUsageUpdateInput: DisposableMaterialUsageUpdateInput!) {\n    DisposableMaterialUsageUpdate(id: $disposableMaterialUsageUpdateId, disposableMaterialUsageUpdateInput: $disposableMaterialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  mutation DisposableMaterialUsageUpdate($disposableMaterialUsageUpdateId: String!, $disposableMaterialUsageUpdateInput: DisposableMaterialUsageUpdateInput!) {\n    DisposableMaterialUsageUpdate(id: $disposableMaterialUsageUpdateId, disposableMaterialUsageUpdateInput: $disposableMaterialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation MaterialUsageUpdate($materialUsageUpdateId: String!, $materialUsageUpdateInput: MaterialUsageUpdateInput!) {\n    MaterialUsageUpdate(id: $materialUsageUpdateId, materialUsageUpdateInput: $materialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation MaterialUsageUpdate($materialUsageUpdateId: String!, $materialUsageUpdateInput: MaterialUsageUpdateInput!) {\n    MaterialUsageUpdate(id: $materialUsageUpdateId, materialUsageUpdateInput: $materialUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation ToolUsageUpdate($toolUsageUpdateId: String!, $toolUsageUpdateInput: ToolUsageUpdateInput!) {\n    ToolUsageUpdate(id: $toolUsageUpdateId, toolUsageUpdateInput: $toolUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  mutation ToolUsageUpdate($toolUsageUpdateId: String!, $toolUsageUpdateInput: ToolUsageUpdateInput!) {\n    ToolUsageUpdate(id: $toolUsageUpdateId, toolUsageUpdateInput: $toolUsageUpdateInput) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserMachineUsageUpdate($userMachineUsageUpdateId: String!, $userMachineUpdateInput: UserMachineUpdateInput!) {\n    UserMachineUsageUpdate(id: $userMachineUsageUpdateId, userMachineUpdateInput: $userMachineUpdateInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      language\n    }\n  }\n"): (typeof documents)["\n  mutation UserMachineUsageUpdate($userMachineUsageUpdateId: String!, $userMachineUpdateInput: UserMachineUpdateInput!) {\n    UserMachineUsageUpdate(id: $userMachineUsageUpdateId, userMachineUpdateInput: $userMachineUpdateInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      language\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateAuthorizedCode($authorizedCodeInput: AuthorizedCodeInput!) {\n    UpdateAuthorizedCode(authorizedCodeInput: $authorizedCodeInput) {\n      id\n      codeList\n      updatedAt\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateAuthorizedCode($authorizedCodeInput: AuthorizedCodeInput!) {\n    UpdateAuthorizedCode(authorizedCodeInput: $authorizedCodeInput) {\n      id\n      codeList\n      updatedAt\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddToolLike($toolLikeInput: ToolLikeInput!) {\n    AddToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n"): (typeof documents)["\n  mutation AddToolLike($toolLikeInput: ToolLikeInput!) {\n    AddToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteToolLike($toolLikeInput: ToolLikeInput!) {\n    DeleteToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteToolLike($toolLikeInput: ToolLikeInput!) {\n    DeleteToolLike(toolLikeInput: $toolLikeInput) {\n      id\n      userId\n      toolId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUserLanguage($editUserLanguageId: String!, $language: String!) {\n    EditUserLanguage(id: $editUserLanguageId, language: $language) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n    }\n  }\n"): (typeof documents)["\n  mutation EditUserLanguage($editUserLanguageId: String!, $language: String!) {\n    EditUserLanguage(id: $editUserLanguageId, language: $language) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddUserBorrowTool($userBorrowToolInput: UserBorrowToolInput!) {\n    AddUserBorrowTool(userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation AddUserBorrowTool($userBorrowToolInput: UserBorrowToolInput!) {\n    AddUserBorrowTool(userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteUserBorrowTool($deleteUserBorrowToolId: String!) {\n    DeleteUserBorrowTool(id: $deleteUserBorrowToolId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteUserBorrowTool($deleteUserBorrowToolId: String!) {\n    DeleteUserBorrowTool(id: $deleteUserBorrowToolId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUserBorrowToolQuantity($editUserBorrowToolQuantityId: String!, $userBorrowToolInput: UserBorrowToolInput!) {\n    EditUserBorrowToolQuantity(id: $editUserBorrowToolQuantityId, userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation EditUserBorrowToolQuantity($editUserBorrowToolQuantityId: String!, $userBorrowToolInput: UserBorrowToolInput!) {\n    EditUserBorrowToolQuantity(id: $editUserBorrowToolQuantityId, userBorrowToolInput: $userBorrowToolInput) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUserBorrowToolStatus($editUserBorrowToolStatusId: String!, $status: String!) {\n    EditUserBorrowToolStatus(id: $editUserBorrowToolStatusId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation EditUserBorrowToolStatus($editUserBorrowToolStatusId: String!, $status: String!) {\n    EditUserBorrowToolStatus(id: $editUserBorrowToolStatusId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    AddMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n"): (typeof documents)["\n  mutation AddMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    AddMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    DeleteMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteMaterialLike($materialLikeInput: MaterialLikeInput!) {\n    DeleteMaterialLike(materialLikeInput: $materialLikeInput) {\n      id\n      userId\n      materialId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddUserBorrowMaterial($userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    AddUserBorrowMaterial(userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation AddUserBorrowMaterial($userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    AddUserBorrowMaterial(userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteUserBorrowMaterial($deleteUserBorrowMaterialId: String!) {\n    DeleteUserBorrowMaterial(id: $deleteUserBorrowMaterialId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteUserBorrowMaterial($deleteUserBorrowMaterialId: String!) {\n    DeleteUserBorrowMaterial(id: $deleteUserBorrowMaterialId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUserBorrowMaterialQuantity($editUserBorrowMaterialQuantityId: String!, $userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    EditUserBorrowMaterialQuantity(id: $editUserBorrowMaterialQuantityId, userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation EditUserBorrowMaterialQuantity($editUserBorrowMaterialQuantityId: String!, $userBorrowMaterialInput: UserBorrowMaterialInput!) {\n    EditUserBorrowMaterialQuantity(id: $editUserBorrowMaterialQuantityId, userBorrowMaterialInput: $userBorrowMaterialInput) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUserBorrowMaterialStatus($editUserBorrowMaterialStatusId: String!, $status: String!) {\n    EditUserBorrowMaterialStatus(id: $editUserBorrowMaterialStatusId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  mutation EditUserBorrowMaterialStatus($editUserBorrowMaterialStatusId: String!, $status: String!) {\n    EditUserBorrowMaterialStatus(id: $editUserBorrowMaterialStatusId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation SignUp($signUpInput: SignUpInput!) {\n    SignUp(signUpInput: $signUpInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n"): (typeof documents)["\n  mutation SignUp($signUpInput: SignUpInput!) {\n    SignUp(signUpInput: $signUpInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddSignupAuthCode($signupAuthCodeInput: SignupAuthCodeInput!) {\n    AddSignupAuthCode(signupAuthCodeInput: $signupAuthCodeInput) {\n      studentID\n      code\n    }\n  }\n"): (typeof documents)["\n  mutation AddSignupAuthCode($signupAuthCodeInput: SignupAuthCodeInput!) {\n    AddSignupAuthCode(signupAuthCodeInput: $signupAuthCodeInput) {\n      studentID\n      code\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditUserPassword($editUserPasswordId: String!, $userPasswordEditInput: UserPasswordEditInput!) {\n    EditUserPassword(id: $editUserPasswordId, userPasswordEditInput: $userPasswordEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation EditUserPassword($editUserPasswordId: String!, $userPasswordEditInput: UserPasswordEditInput!) {\n    EditUserPassword(id: $editUserPasswordId, userPasswordEditInput: $userPasswordEditInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation PromoteUser($promoteUserId: String!, $promoteUserInput: PromoteUserInput!) {\n    PromoteUser(id: $promoteUserId, promoteUserInput: $promoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation PromoteUser($promoteUserId: String!, $promoteUserInput: PromoteUserInput!) {\n    PromoteUser(id: $promoteUserId, promoteUserInput: $promoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DemoteUser($demoteUserId: String!, $demoteUserInput: DemoteUserInput!) {\n    DemoteUser(id: $demoteUserId, demoteUserInput: $demoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  mutation DemoteUser($demoteUserId: String!, $demoteUserInput: DemoteUserInput!) {\n    DemoteUser(id: $demoteUserId, demoteUserInput: $demoteUserInput) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation AddAdminSchedule($adminScheduleInput: AdminScheduleInput!) {\n    AddAdminSchedule(adminScheduleInput: $adminScheduleInput) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"): (typeof documents)["\n  mutation AddAdminSchedule($adminScheduleInput: AdminScheduleInput!) {\n    AddAdminSchedule(adminScheduleInput: $adminScheduleInput) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteAdminSchedule($deleteAdminScheduleId: String!) {\n    DeleteAdminSchedule(id: $deleteAdminScheduleId) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteAdminSchedule($deleteAdminScheduleId: String!) {\n    DeleteAdminSchedule(id: $deleteAdminScheduleId) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation EditAdminSchedule($editAdminScheduleId: String!, $name: String!) {\n    EditAdminSchedule(id: $editAdminScheduleId, name: $name) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"): (typeof documents)["\n  mutation EditAdminSchedule($editAdminScheduleId: String!, $name: String!) {\n    EditAdminSchedule(id: $editAdminScheduleId, name: $name) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllAnnouncements($cursor: String, $limit: Int) {\n    GetAllAnnouncements(cursor: $cursor, limit: $limit) {\n      announcements {\n        id\n        title\n        date\n        content\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllAnnouncements($cursor: String, $limit: Int) {\n    GetAllAnnouncements(cursor: $cursor, limit: $limit) {\n      announcements {\n        id\n        title\n        date\n        content\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAnnouncementById($id: String!) {\n    GetAnnouncementById(id: $id) {\n      id\n      title\n      date\n      content\n    }\n  }\n"): (typeof documents)["\n  query GetAnnouncementById($id: String!) {\n    GetAnnouncementById(id: $id) {\n      id\n      title\n      date\n      content\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchAnnouncementByTitle($title: String!) {\n    SearchAnnouncementByTitle(title: $title) {\n      id\n      title\n      date\n      content\n    }\n  }\n"): (typeof documents)["\n  query SearchAnnouncementByTitle($title: String!) {\n    SearchAnnouncementByTitle(title: $title) {\n      id\n      title\n      date\n      content\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllTools($cursor: String, $limit: Int) {\n    GetAllTools(cursor: $cursor, limit: $limit) {\n      tools {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        remain\n        toolLikeIds\n        userBorrowToolIds\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllTools($cursor: String, $limit: Int) {\n    GetAllTools(cursor: $cursor, limit: $limit) {\n      tools {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        remain\n        toolLikeIds\n        userBorrowToolIds\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetToolById($getToolByIdId: String!) {\n    GetToolById(id: $getToolByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  query GetToolById($getToolByIdId: String!) {\n    GetToolById(id: $getToolByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchToolByCategory($category: String!) {\n  SearchToolByCategory(category: $category) {\n    id\n    name\n    partName\n    category\n    position\n    description\n    photoLink\n    usage\n    tutorialLink\n    remain\n    toolLikeIds\n    userBorrowToolIds\n  }\n}\n"): (typeof documents)["\n  query SearchToolByCategory($category: String!) {\n  SearchToolByCategory(category: $category) {\n    id\n    name\n    partName\n    category\n    position\n    description\n    photoLink\n    usage\n    tutorialLink\n    remain\n    toolLikeIds\n    userBorrowToolIds\n  }\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchToolByPosition($position: String!) {\n    SearchToolByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  query SearchToolByPosition($position: String!) {\n    SearchToolByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchToolByName($name: String!) {\n    SearchToolByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  query SearchToolByName($name: String!) {\n    SearchToolByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllArticles($cursor: String, $limit: Int) {\n    GetAllArticles(cursor: $cursor, limit: $limit) {\n      articles {\n        id\n        writerId\n        description\n        imageURL\n        time\n        title\n        headline\n        content\n        userpic\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllArticles($cursor: String, $limit: Int) {\n    GetAllArticles(cursor: $cursor, limit: $limit) {\n      articles {\n        id\n        writerId\n        description\n        imageURL\n        time\n        title\n        headline\n        content\n        userpic\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetArticleById($getArticleByIdId: String!) {\n  GetArticleById(id: $getArticleByIdId) {\n    id\n    writerId\n    description\n    imageURL\n    time\n    title\n    headline\n    content\n    userpic\n  }\n}\n"): (typeof documents)["\n  query GetArticleById($getArticleByIdId: String!) {\n  GetArticleById(id: $getArticleByIdId) {\n    id\n    writerId\n    description\n    imageURL\n    time\n    title\n    headline\n    content\n    userpic\n  }\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllDisposableMaterials($cursor: String, $limit: Int) {\n    GetAllDisposableMaterials(cursor: $cursor, limit: $limit) {\n      disposableMaterials {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllDisposableMaterials($cursor: String, $limit: Int) {\n    GetAllDisposableMaterials(cursor: $cursor, limit: $limit) {\n      disposableMaterials {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchDisposableMaterialByCategory($category: String!) {\n    SearchDisposableMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  query SearchDisposableMaterialByCategory($category: String!) {\n    SearchDisposableMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchDisposableMaterialByPosition($position: String!) {\n    SearchDisposableMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  query SearchDisposableMaterialByPosition($position: String!) {\n    SearchDisposableMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchDisposableMaterialByName($name: String!) {\n    SearchDisposableMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"): (typeof documents)["\n  query SearchDisposableMaterialByName($name: String!) {\n    SearchDisposableMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllMachines($cursor: String, $limit: Int) {\n    GetAllMachines(cursor: $cursor, limit: $limit) {\n      machines {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllMachines($cursor: String, $limit: Int) {\n    GetAllMachines(cursor: $cursor, limit: $limit) {\n      machines {\n        id\n        name\n        partName\n        category\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetMachineById($getMachineByIdId: String!) {\n    GetMachineById(id: $getMachineByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  query GetMachineById($getMachineByIdId: String!) {\n    GetMachineById(id: $getMachineByIdId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchMachineByCategory($category: String!) {\n    SearchMachineByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  query SearchMachineByCategory($category: String!) {\n    SearchMachineByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchMachineByPosition($position: String!) {\n    SearchMachineByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  query SearchMachineByPosition($position: String!) {\n    SearchMachineByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchMachineByName($input: String!) {\n    SearchMachineByName(input: $input) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"): (typeof documents)["\n  query SearchMachineByName($input: String!) {\n    SearchMachineByName(input: $input) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllMaterials($cursor: String, $limit: Int) {\n    GetAllMaterials(cursor: $cursor, limit: $limit) {\n      materials {\n        id\n        name\n        partName\n        category\n        valuable\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllMaterials($cursor: String, $limit: Int) {\n    GetAllMaterials(cursor: $cursor, limit: $limit) {\n      materials {\n        id\n        name\n        partName\n        category\n        valuable\n        position\n        description\n        photoLink\n        usage\n        tutorialLink\n        fee\n        remain\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetMaterialById($id: String!) {\n    GetMaterialById(id: $id) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  query GetMaterialById($id: String!) {\n    GetMaterialById(id: $id) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchMaterialByCategory($category: String!) {\n    SearchMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  query SearchMaterialByCategory($category: String!) {\n    SearchMaterialByCategory(category: $category) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchMaterialByPosition($position: String!) {\n    SearchMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  query SearchMaterialByPosition($position: String!) {\n    SearchMaterialByPosition(position: $position) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchMaterialByName($name: String!) {\n    SearchMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  query SearchMaterialByName($name: String!) {\n    SearchMaterialByName(name: $name) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllThreeDPs($cursor: String, $limit: Int) {\n    GetAllThreeDPs(cursor: $cursor, limit: $limit) {\n      threeDPs {\n        id\n        name\n        position\n        description\n        photoLink\n        tutorialLink\n        threeDPRequestIds\n        broken\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllThreeDPs($cursor: String, $limit: Int) {\n    GetAllThreeDPs(cursor: $cursor, limit: $limit) {\n      threeDPs {\n        id\n        name\n        position\n        description\n        photoLink\n        tutorialLink\n        threeDPRequestIds\n        broken\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetThreeDPById($getThreeDpByIdId: String!) {\n    GetThreeDPById(id: $getThreeDpByIdId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"): (typeof documents)["\n  query GetThreeDPById($getThreeDpByIdId: String!) {\n    GetThreeDPById(id: $getThreeDpByIdId) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchThreeDPByPosition($position: String!) {\n    SearchThreeDPByPosition(position: $position) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"): (typeof documents)["\n  query SearchThreeDPByPosition($position: String!) {\n    SearchThreeDPByPosition(position: $position) {\n      id\n      name\n      position\n      description\n      photoLink\n      tutorialLink\n      threeDPRequestIds\n      broken\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllThreeDPRequests {\n    GetAllThreeDPRequests {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"): (typeof documents)["\n  query GetAllThreeDPRequests {\n    GetAllThreeDPRequests {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetThreeDPRequestsByThreeDPId($threeDpId: String!) {\n    GetThreeDPRequestsByThreeDPId(threeDPId: $threeDpId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"): (typeof documents)["\n  query GetThreeDPRequestsByThreeDPId($threeDpId: String!) {\n    GetThreeDPRequestsByThreeDPId(threeDPId: $threeDpId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetThreeDPRequestsByUserId($userId: String!) {\n    GetThreeDPRequestsByUserId(userId: $userId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"): (typeof documents)["\n  query GetThreeDPRequestsByUserId($userId: String!) {\n    GetThreeDPRequestsByUserId(userId: $userId) {\n      id\n      name\n      studentID\n      userId\n      threeDPId\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllUsers($cursor: String, $limit: Int) {\n    GetAllUsers(cursor: $cursor, limit: $limit) {\n      users {\n        id\n        name\n        studentID\n        photoLink\n        laserCutAvailable\n        isAdmin\n        isMinister\n      }\n      cursor\n    }\n  }\n"): (typeof documents)["\n  query GetAllUsers($cursor: String, $limit: Int) {\n    GetAllUsers(cursor: $cursor, limit: $limit) {\n      users {\n        id\n        name\n        studentID\n        photoLink\n        laserCutAvailable\n        isAdmin\n        isMinister\n      }\n      cursor\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query SearchUserByName($name: String!) {\n    SearchUserByName(name: $name) {\n      id\n      name\n      studentID\n      photoLink\n      laserCutAvailable\n      isAdmin\n      isMinister\n    }\n  }\n"): (typeof documents)["\n  query SearchUserByName($name: String!) {\n    SearchUserByName(name: $name) {\n      id\n      name\n      studentID\n      photoLink\n      laserCutAvailable\n      isAdmin\n      isMinister\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserByStudentID($studentId: String!) {\n    GetUserByStudentID(studentID: $studentId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"): (typeof documents)["\n  query GetUserByStudentID($studentId: String!) {\n    GetUserByStudentID(studentID: $studentId) {\n      id\n      name\n      studentID\n      password\n      photoLink\n      language\n      threeDPId\n      laserCutAvailable\n      articlesId\n      isAdmin\n      isMinister\n      toolLikeIds\n      userBorrowToolIds\n      materialLikeIds\n      userBorrowMaterialIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAuthorizedCode {\n    GetAuthorizedCode {\n      id\n      codeList\n      updatedAt\n    }\n  }\n"): (typeof documents)["\n  query GetAuthorizedCode {\n    GetAuthorizedCode {\n      id\n      codeList\n      updatedAt\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetToolLikes {\n    GetToolLikes {\n      id\n      userId\n      toolId\n    }\n  }\n"): (typeof documents)["\n  query GetToolLikes {\n    GetToolLikes {\n      id\n      userId\n      toolId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetToolLikeById($getToolLikeByIdId: String!) {\n    GetToolLikeById(id: $getToolLikeByIdId) {\n      id\n      userId\n      toolId\n    }\n  }\n"): (typeof documents)["\n  query GetToolLikeById($getToolLikeByIdId: String!) {\n    GetToolLikeById(id: $getToolLikeByIdId) {\n      id\n      userId\n      toolId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetLikedToolsByUserId($userId: String!) {\n    GetLikedToolsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"): (typeof documents)["\n  query GetLikedToolsByUserId($userId: String!) {\n    GetLikedToolsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      remain\n      toolLikeIds\n      userBorrowToolIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllUserBorrowTools {\n    GetAllUserBorrowTools {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetAllUserBorrowTools {\n    GetAllUserBorrowTools {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllUserBorrowToolsByStatus($status: [String]!) {\n    GetAllUserBorrowToolsByStatus(status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetAllUserBorrowToolsByStatus($status: [String]!) {\n    GetAllUserBorrowToolsByStatus(status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserBorrowToolById($getUserBorrowToolByIdId: String!) {\n    GetUserBorrowToolById(id: $getUserBorrowToolByIdId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetUserBorrowToolById($getUserBorrowToolByIdId: String!) {\n    GetUserBorrowToolById(id: $getUserBorrowToolByIdId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserBorrowToolsByUserId($userId: String!) {\n    GetUserBorrowToolsByUserId(userId: $userId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetUserBorrowToolsByUserId($userId: String!) {\n    GetUserBorrowToolsByUserId(userId: $userId) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserBorrowToolsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowToolsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetUserBorrowToolsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowToolsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      toolId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetMaterialLikes {\n    GetMaterialLikes {\n      id\n      userId\n      materialId\n    }\n  }\n"): (typeof documents)["\n  query GetMaterialLikes {\n    GetMaterialLikes {\n      id\n      userId\n      materialId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetMaterialLikeById($getMaterialLikeByIdId: String!) {\n    GetMaterialLikeById(id: $getMaterialLikeByIdId) {\n      id\n      userId\n      materialId\n    }\n  }\n"): (typeof documents)["\n  query GetMaterialLikeById($getMaterialLikeByIdId: String!) {\n    GetMaterialLikeById(id: $getMaterialLikeByIdId) {\n      id\n      userId\n      materialId\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetLikedMaterialsByUserId($userId: String!) {\n    GetLikedMaterialsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n    }\n  }\n"): (typeof documents)["\n  query GetLikedMaterialsByUserId($userId: String!) {\n    GetLikedMaterialsByUserId(userId: $userId) {\n      id\n      name\n      partName\n      category\n      valuable\n      position\n      description\n      photoLink\n      usage\n      tutorialLink\n      fee\n      remain\n      materialLikeIds\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllUserBorrowMaterials {\n    GetAllUserBorrowMaterials {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetAllUserBorrowMaterials {\n    GetAllUserBorrowMaterials {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllUserBorrowMaterialsByStatus($status: [String]!) {\n    GetAllUserBorrowMaterialsByStatus(status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetAllUserBorrowMaterialsByStatus($status: [String]!) {\n    GetAllUserBorrowMaterialsByStatus(status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserBorrowMaterialById($getUserBorrowMaterialByIdId: String!) {\n    GetUserBorrowMaterialById(id: $getUserBorrowMaterialByIdId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetUserBorrowMaterialById($getUserBorrowMaterialByIdId: String!) {\n    GetUserBorrowMaterialById(id: $getUserBorrowMaterialByIdId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserBorrowMaterialsByUserId($userId: String!) {\n    GetUserBorrowMaterialsByUserId(userId: $userId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetUserBorrowMaterialsByUserId($userId: String!) {\n    GetUserBorrowMaterialsByUserId(userId: $userId) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetUserBorrowMaterialsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowMaterialsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"): (typeof documents)["\n  query GetUserBorrowMaterialsByStatusAndUserId($userId: String!, $status: [String]!) {\n    GetUserBorrowMaterialsByStatusAndUserId(userId: $userId, status: $status) {\n      id\n      userId\n      materialId\n      borrower\n      studentId\n      figure\n      name\n      partName\n      category\n      remain\n      position\n      quantity\n      status\n      borrowDate\n      returnDate\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query LogIn($logInInput: LogInInput!) {\n    LogIn(logInInput: $logInInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n"): (typeof documents)["\n  query LogIn($logInInput: LogInInput!) {\n    LogIn(logInInput: $logInInput) {\n      user {\n        id\n        name\n        studentID\n        password\n        photoLink\n        language\n        threeDPId\n        laserCutAvailable\n        articlesId\n        isAdmin\n        isMinister\n        toolLikeIds\n        userBorrowToolIds\n        materialLikeIds\n        userBorrowMaterialIds\n      }\n      token\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAdminScheduleByDay($day: String!) {\n    GetAdminScheduleByDay(day: $day) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"): (typeof documents)["\n  query GetAdminScheduleByDay($day: String!) {\n    GetAdminScheduleByDay(day: $day) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAdminScheduleByPeriod($period: String!) {\n    GetAdminScheduleByPeriod(period: $period) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"): (typeof documents)["\n  query GetAdminScheduleByPeriod($period: String!) {\n    GetAdminScheduleByPeriod(period: $period) {\n      id\n      admin\n      day\n      period\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllAdminSchedules {\n    GetAllAdminSchedules {\n      id\n      admin\n      day\n      period\n    }\n  }\n"): (typeof documents)["\n  query GetAllAdminSchedules {\n    GetAllAdminSchedules {\n      id\n      admin\n      day\n      period\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAllSignupAuthCodes {\n    GetAllSignupAuthCodes {\n      studentID\n      code\n    }\n  }\n"): (typeof documents)["\n  query GetAllSignupAuthCodes {\n    GetAllSignupAuthCodes {\n      studentID\n      code\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetSignupAuthCodeByStudentID($studentId: String!) {\n    GetSignupAuthCodeByStudentID(studentID: $studentId) {\n      studentID\n      code\n    }\n  }\n"): (typeof documents)["\n  query GetSignupAuthCodeByStudentID($studentId: String!) {\n    GetSignupAuthCodeByStudentID(studentID: $studentId) {\n      studentID\n      code\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query Query($studentId: String!, $code: String!) {\n    CheckSignupAuthCode(studentID: $studentId, code: $code)\n  }\n"): (typeof documents)["\n  query Query($studentId: String!, $code: String!) {\n    CheckSignupAuthCode(studentID: $studentId, code: $code)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription AnnouncementCreated {\n    AnnouncementCreated {\n      id\n      date\n      title\n      content\n    }\n  }\n"): (typeof documents)["\n  subscription AnnouncementCreated {\n    AnnouncementCreated {\n      id\n      date\n      title\n      content\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription ArticleCreated {\n    ArticleCreated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n"): (typeof documents)["\n  subscription ArticleCreated {\n    ArticleCreated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription ArticleUpdated {\n    ArticleUpdated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n"): (typeof documents)["\n  subscription ArticleUpdated {\n    ArticleUpdated {\n      id\n      title\n      description\n      content\n      writerId\n      time\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription ArticleDeleted {\n    ArticleDeleted {\n      id\n    }\n  }\n"): (typeof documents)["\n  subscription ArticleDeleted {\n    ArticleDeleted {\n      id\n    }\n  }\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;